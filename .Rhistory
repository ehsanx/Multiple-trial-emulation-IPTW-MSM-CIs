"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Confounding strength\n(N = 1000, Treat. prev = 0)',
y = "Mean CI length")
p2 <- ggplot() +
geom_line(aes(x = treat_pos, y = mean_lengths_treat[1,], colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat[1,], colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = mean_lengths_treat[2,], colour = "LEF outcome")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat[2,], colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = mean_lengths_treat[3,], colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat[3,], colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = mean_lengths_treat[4,], colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Treatment prevalence\n(N = 1000, Confounding = 0.5)',
y = "Mean CI length")
p3 <- ggplot() +
geom_line(aes(x = sizes*100, y = mean_lengths_size[1,], colour = "Bootstrap")) +
geom_point(aes(x = sizes*100, y = mean_lengths_size[1,], colour = "Bootstrap")) +
geom_line(aes(x = sizes*100, y = mean_lengths_size[2,], colour = "LEF outcome")) +
geom_point(aes(x = sizes*100, y = mean_lengths_size[2,], colour = "LEF outcome")) +
geom_line(aes(x = sizes*100, y = mean_lengths_size[3,], colour = "LEF both")) +
geom_point(aes(x = sizes*100, y = mean_lengths_size[3,], colour = "LEF both")) +
geom_line(aes(x = sizes*100, y = mean_lengths_size[4,], colour = "Sandwich")) +
geom_point(aes(x = sizes*100, y = mean_lengths_size[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Patient sample size\n(Confounding  = 0.5, Treat. prev = 0)',
y = "Mean CI length")
figureA <- ggarrange(p1 + rremove("ylab"),p2 + rremove("ylab"),p3 + rremove("ylab"), nrow = 1, ncol = 3, common.legend = T, legend = 'none')
figureA <- annotate_figure(figureA,top = text_grob("Mean CI length",size = 14), left = text_grob("Mean CI length",size = 10, rot =  90))
p1_sd <- ggplot() +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs[1,], colour = "Bootstrap")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs[1,], colour = "Bootstrap")) +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs[2,], colour = "LEF outcome")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs[2,], colour = "LEF outcome")) +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs[3,], colour = "LEF both")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs[3,], colour = "LEF both")) +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs[4,], colour = "Sandwich")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Confounding strength\n(N = 1000, Treat. prev = 0)',
y = "Standard deviation of CI length")
p2_sd <- ggplot() +
geom_line(aes(x = treat_pos, y = sd_lengths_treat[1,], colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat[1,], colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = sd_lengths_treat[2,], colour = "LEF outcome")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat[2,], colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = sd_lengths_treat[3,], colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat[3,], colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = sd_lengths_treat[4,], colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Treatment prevalence\n(N = 1000, Confounding = 0.5)',
y = "Standard deviation of CI length")
p3_sd <- ggplot() +
geom_line(aes(x = sizes*100, y = sd_lengths_size[1,], colour = "Bootstrap")) +
geom_point(aes(x = sizes*100, y = sd_lengths_size[1,], colour = "Bootstrap")) +
geom_line(aes(x = sizes*100, y = sd_lengths_size[2,], colour = "LEF outcome")) +
geom_point(aes(x = sizes*100, y = sd_lengths_size[2,], colour = "LEF outcome")) +
geom_line(aes(x = sizes*100, y = sd_lengths_size[3,], colour = "LEF both")) +
geom_point(aes(x = sizes*100, y = sd_lengths_size[3,], colour = "LEF both")) +
geom_line(aes(x = sizes*100, y = sd_lengths_size[4,], colour = "Sandwich")) +
geom_point(aes(x = sizes*100, y = sd_lengths_size[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Patient sample size\n(Confounding  = 0.5, Treat. prev = 0)',
y = "Standard deviation of CI length")
figureA_sd <- ggarrange(p1_sd + rremove("ylab"),p2_sd + rremove("ylab"),p3_sd + rremove("ylab"), nrow = 1, ncol = 3, common.legend = T, legend = 'bottom')
figureA_sd <- annotate_figure(figureA_sd,top = text_grob("Standard deviation of CI length",size = 14), left = text_grob("CI length SD",size = 10, rot =  90))
ggarrange(heights = c(4, 4.9),figureA, figureA_sd, nrow = 2, ncol = 1)
################# COMPUTATION TIME PLOTS ##################
p1 <- ggplot() +
geom_line(aes(x = 1:9/10, y = mean_time_coefs[1,], colour = "Bootstrap")) +
geom_point(aes(x = 1:9/10, y = mean_time_coefs[1,], colour = "Bootstrap")) +
geom_line(aes(x = 1:9/10, y = mean_time_coefs[2,], colour = "LEF outcome")) +
geom_point(aes(x = 1:9/10, y = mean_time_coefs[2,], colour = "LEF outcome")) +
geom_line(aes(x = 1:9/10, y = mean_time_coefs[3,], colour = "LEF both")) +
geom_point(aes(x = 1:9/10, y = mean_time_coefs[3,], colour = "LEF both")) +
geom_line(aes(x = 1:9/10, y = mean_time_coefs[4,], colour = "Sandwich")) +
geom_point(aes(x = 1:9/10, y = mean_time_coefs[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Confounding strength\n(N = 1000, Treat. prev. = 0)',
y = "Mean computation time")
p2 <- ggplot() +
geom_line(aes(x = treat_pos, y = mean_time_treat[1,], colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = mean_time_treat[1,], colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = mean_time_treat[2,], colour = "LEF outcome")) +
geom_point(aes(x = treat_pos, y = mean_time_treat[2,], colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = mean_time_treat[3,], colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = mean_time_treat[3,], colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = mean_time_treat[4,], colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = mean_time_treat[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Treatment prevalence\n(N = 1000, Confounding = 0.5)',
y = "Mean computation time")
p3 <- ggplot() +
geom_line(aes(x = sizes*100, y = mean_time_size[1,], colour = "Bootstrap")) +
geom_point(aes(x = sizes*100, y = mean_time_size[1,], colour = "Bootstrap")) +
geom_line(aes(x = sizes*100, y = mean_time_size[2,], colour = "LEF outcome")) +
geom_point(aes(x = sizes*100, y = mean_time_size[2,], colour = "LEF outcome")) +
geom_line(aes(x = sizes*100, y = mean_time_size[3,], colour = "LEF both")) +
geom_point(aes(x = sizes*100, y = mean_time_size[3,], colour = "LEF both")) +
geom_line(aes(x = sizes*100, y = mean_time_size[4,], colour = "Sandwich")) +
geom_point(aes(x = sizes*100, y = mean_time_size[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Patient sample size\n(Confounding  = 0.5, Treat. prev = 0)',
y = "Mean computation time")
figureT <- ggarrange(p1 + rremove("ylab"),p2 + rremove("ylab"),p3 + rremove("ylab"), nrow = 1, ncol = 3, common.legend = T, legend = 'none')
figureT <- annotate_figure(figureT,top = text_grob("Mean CI computation time",size = 14), left = text_grob("Mean computation time (sec.)",size = 10, rot =  90))
figureT
############# COVERAGE #####################
library(tidyverse)
library(tidyr)
setwd("/Users/juliette/Documents/MPhil PHS 21-22/MPhil-dissertation/Code")
library(ggplot2)
library(ggpubr)
load("HPC output/true_value_conf_red.rda")
load("HPC output/true_value_treat_red.rda")
bootstrap_coefs <- array(,dim = c(5,2,1000,9))
LEF_outcome_coefs <- array(,dim = c(5,2,1000,9))
LEF_both_coefs <- array(,dim = c(5,2,1000,9))
sandwich_coefs <- array(,dim = c(5,2,1000,9))
time_coefs <- array(,dim = c(4,1000,9))
bootstrap_treat <- array(,dim = c(5,2,1000,9))
LEF_outcome_treat <- array(,dim = c(5,2,1000,9))
LEF_both_treat <- array(,dim = c(5,2,1000,9))
sandwich_treat <- array(,dim = c(5,2,1000,9))
time_treat <- array(,dim = c(4,1000,9))
bootstrap_size <- array(,dim = c(5,2,1000,7))
LEF_outcome_size <- array(,dim = c(5,2,1000,7))
LEF_both_size <- array(,dim = c(5,2,1000,7))
sandwich_size <- array(,dim = c(5,2,1000,7))
time_size <- array(,dim = c(4,1000,7))
bootstrap_coefs_big <- array(,dim = c(5,2,1000,9))
LEF_outcome_coefs_big <- array(,dim = c(5,2,1000,9))
LEF_both_coefs_big <- array(,dim = c(5,2,1000,9))
sandwich_coefs_big <- array(,dim = c(5,2,1000,9))
time_coefs_big <- array(,dim = c(4,1000,9))
bootstrap_treat_big <- array(,dim = c(5,2,1000,9))
LEF_outcome_treat_big <- array(,dim = c(5,2,1000,9))
LEF_both_treat_big <- array(,dim = c(5,2,1000,9))
sandwich_treat_big <- array(,dim = c(5,2,1000,9))
time_treat_big <-  array(,dim = c(4,1000,9))
treat_pos <- c(-1,-0.8,-0.5,-0.2,0,0.2,0.5,0.8,1)
for (i in 1:9){
load(paste0("HPC output/CI_bootstrap_coefs_PP_red_", i, ".rda"))
load(paste0("HPC output/CI_LEF_outcome_coefs_PP_red_", i, ".rda"))
load(paste0("HPC output/CI_LEF_both_coefs_PP_red_", i, ".rda"))
load(paste0("HPC output/CI_sandwich_coefs_PP_red_", i, ".rda"))
load(paste0("HPC output/computation_time_coefs_", i, ".rda"))
load(paste0("HPC output/CI_bootstrap_treat_PP_red_", i, ".rda"))
load(paste0("HPC output/CI_LEF_outcome_treat_PP_red_", i, ".rda"))
load(paste0("HPC output/CI_LEF_both_treat_PP_red_", i, ".rda"))
load(paste0("HPC output/CI_sandwich_treat_PP_red_", i, ".rda"))
load(paste0("HPC output/computation_time_treat_", i, ".rda"))
bootstrap_coefs[,,,i] <- CI_bootstrap_coefs_PP_red
LEF_outcome_coefs[,,,i] <- CI_LEF_outcome_coefs_PP_red
LEF_both_coefs[,,,i] <- CI_LEF_both_coefs_PP_red
sandwich_coefs[,,,i] <- CI_sandwich_coefs_PP_red
time_coefs[,,i] <- computation_time_coefs
bootstrap_treat[,,,i] <- CI_bootstrap_treat_PP_red
LEF_outcome_treat[,,,i] <- CI_LEF_outcome_treat_PP_red
LEF_both_treat[,,,i] <- CI_LEF_both_treat_PP_red
sandwich_treat[,,,i] <- CI_sandwich_treat_PP_red
time_treat[,,i] <- computation_time_treat
load(paste0("HPC output/CI_bootstrap_coefs_PP_red_big_", i, ".rda"))
load(paste0("HPC output/CI_LEF_outcome_coefs_PP_red_big_", i, ".rda"))
load(paste0("HPC output/CI_LEF_both_coefs_PP_red_big_", i, ".rda"))
load(paste0("HPC output/CI_sandwich_coefs_PP_red_big_", i, ".rda"))
load(paste0("HPC output/computation_time_coefs_big_", i, ".rda"))
load(paste0("HPC output/CI_bootstrap_treat_PP_red_big_", i, ".rda"))
load(paste0("HPC output/CI_LEF_outcome_treat_PP_red_big_", i, ".rda"))
load(paste0("HPC output/CI_LEF_both_treat_PP_red_big_", i, ".rda"))
load(paste0("HPC output/CI_sandwich_treat_PP_red_big_", i, ".rda"))
load(paste0("HPC output/computation_time_treat_big_", i, ".rda"))
bootstrap_coefs_big[,,,i] <- CI_bootstrap_coefs_PP_red_big
LEF_outcome_coefs_big[,,,i] <- CI_LEF_outcome_coefs_PP_red_big
LEF_both_coefs_big[,,,i] <- CI_LEF_both_coefs_PP_red_big
sandwich_coefs_big[,,,i] <- CI_sandwich_coefs_PP_red_big
time_coefs_big[,,i] <- computation_time_coefs_big
bootstrap_treat_big[,,,i] <- CI_bootstrap_treat_PP_red_big
LEF_outcome_treat_big[,,,i] <- CI_LEF_outcome_treat_PP_red_big
LEF_both_treat_big[,,,i] <- CI_LEF_both_treat_PP_red_big
sandwich_treat_big[,,,i] <- CI_sandwich_treat_PP_red_big
time_treat_big[,,i] <- computation_time_treat_big
}
sizes <- c(2,5,8,10,25,50,100)
for (i in 1:7){
load(paste0("HPC output/CI_bootstrap_size_PP_red_", sizes[i], ".rda"))
load(paste0("HPC output/CI_LEF_outcome_size_PP_red_", sizes[i], ".rda"))
load(paste0("HPC output/CI_LEF_both_size_PP_red_", sizes[i], ".rda"))
load(paste0("HPC output/CI_sandwich_size_PP_red_", sizes[i], ".rda"))
load(paste0("HPC output/computation_time_size_", sizes[i], ".rda"))
bootstrap_size[,,,i] <- CI_bootstrap_size_PP_red
LEF_outcome_size[,,,i] <- CI_LEF_outcome_size_PP_red
LEF_both_size[,,,i] <- CI_LEF_both_size_PP_red
sandwich_size[,,,i] <- CI_sandwich_size_PP_red
time_size[,,i] <- computation_time_size
}
mean_lengths_coefs <- matrix(0, nrow = 4, ncol = 9)
mean_lengths_treat <- matrix(0, nrow = 8, ncol = 9)
mean_lengths_size <- matrix(0, nrow = 8, ncol = 7)
sd_lengths_coefs <- matrix(0, nrow = 4, ncol = 9)
sd_lengths_treat <- matrix(0, nrow = 8, ncol = 9)
sd_lengths_size <- matrix(0, nrow = 8, ncol = 7)
mean_lengths_coefs_big <- matrix(0, nrow = 4, ncol = 9)
mean_lengths_treat_big <- matrix(0, nrow = 8, ncol = 9)
sd_lengths_coefs_big <- matrix(0, nrow = 4, ncol = 9)
sd_lengths_treat_big <- matrix(0, nrow = 8, ncol = 9)
mean_time_coefs <- array(,dim = c(4,9))
mean_time_treat <- array(,dim = c(4,9))
mean_time_size <- array(,dim = c(4,7))
mean_time_coefs_big <- array(,dim = c(4,9))
mean_time_treat_big <- array(,dim = c(4,9))
for (i in 1:9){
mean_lengths_coefs[1,i] <- mean(rowMeans(bootstrap_coefs[,2,,i]- bootstrap_coefs[,1,,i], na.rm = TRUE))
mean_lengths_coefs[2,i] <- mean(rowMeans(LEF_outcome_coefs[,2,,i]- LEF_outcome_coefs[,1,,i], na.rm = TRUE))
mean_lengths_coefs[3,i] <- mean(rowMeans(LEF_both_coefs[,2,,i]- LEF_both_coefs[,1,,i], na.rm = TRUE))
mean_lengths_coefs[4,i] <- mean(rowMeans(sandwich_coefs[,2,,i]- sandwich_coefs[,1,,i], na.rm = TRUE))
mean_lengths_treat[1,i] <- mean(rowMeans(bootstrap_treat[,2,,i]- bootstrap_treat[,1,,i], na.rm = TRUE))
mean_lengths_treat[2,i] <- mean(rowMeans(LEF_outcome_treat[,2,,i]- LEF_outcome_treat[,1,,i], na.rm = TRUE))
mean_lengths_treat[3,i] <- mean(rowMeans(LEF_both_treat[,2,,i]- LEF_both_treat[,1,,i], na.rm = TRUE))
mean_lengths_treat[4,i] <- mean(rowMeans(sandwich_treat[,2,,i]- sandwich_treat[,1,,i], na.rm = TRUE))
sd_lengths_coefs[1,i] <- sd(rowMeans(bootstrap_coefs[,2,,i]- bootstrap_coefs[,1,,i], na.rm = TRUE))
sd_lengths_coefs[2,i] <- sd(rowMeans(LEF_outcome_coefs[,2,,i]- LEF_outcome_coefs[,1,,i], na.rm = TRUE))
sd_lengths_coefs[3,i] <- sd(rowMeans(LEF_both_coefs[,2,,i]- LEF_both_coefs[,1,,i], na.rm = TRUE))
sd_lengths_coefs[4,i] <- sd(rowMeans(sandwich_coefs[,2,,i]- sandwich_coefs[,1,,i], na.rm = TRUE))
sd_lengths_treat[1,i] <- sd(rowMeans(bootstrap_treat[,2,,i]- bootstrap_treat[,1,,i], na.rm = TRUE))
sd_lengths_treat[2,i] <- sd(rowMeans(LEF_outcome_treat[,2,,i]- LEF_outcome_treat[,1,,i], na.rm = TRUE))
sd_lengths_treat[3,i] <- sd(rowMeans(LEF_both_treat[,2,,i]- LEF_both_treat[,1,,i], na.rm = TRUE))
sd_lengths_treat[4,i] <- sd(rowMeans(sandwich_treat[,2,,i]- sandwich_treat[,1,,i], na.rm = TRUE))
mean_lengths_coefs_big[1,i] <- mean(rowMeans(bootstrap_coefs_big[,2,,i]- bootstrap_coefs_big[,1,,i], na.rm = TRUE))
mean_lengths_coefs_big[2,i] <- mean(rowMeans(LEF_outcome_coefs_big[,2,,i]- LEF_outcome_coefs_big[,1,,i], na.rm = TRUE))
mean_lengths_coefs_big[3,i] <- mean(rowMeans(LEF_both_coefs_big[,2,,i]- LEF_both_coefs_big[,1,,i], na.rm = TRUE))
mean_lengths_coefs_big[4,i] <- mean(rowMeans(sandwich_coefs_big[,2,,i]- sandwich_coefs_big[,1,,i], na.rm = TRUE))
mean_lengths_treat_big[1,i] <- mean(rowMeans(bootstrap_treat_big[,2,,i]- bootstrap_treat_big[,1,,i], na.rm = TRUE))
mean_lengths_treat_big[2,i] <- mean(rowMeans(LEF_outcome_treat_big[,2,,i]- LEF_outcome_treat_big[,1,,i], na.rm = TRUE))
mean_lengths_treat_big[3,i] <- mean(rowMeans(LEF_both_treat_big[,2,,i]- LEF_both_treat_big[,1,,i], na.rm = TRUE))
mean_lengths_treat_big[4,i] <- mean(rowMeans(sandwich_treat_big[,2,,i]- sandwich_treat_big[,1,,i], na.rm = TRUE))
sd_lengths_coefs_big[1,i] <- sd(rowMeans(bootstrap_coefs_big[,2,,i]- bootstrap_coefs_big[,1,,i], na.rm = TRUE))
sd_lengths_coefs_big[2,i] <- sd(rowMeans(LEF_outcome_coefs_big[,2,,i]- LEF_outcome_coefs_big[,1,,i], na.rm = TRUE))
sd_lengths_coefs_big[3,i] <- sd(rowMeans(LEF_both_coefs_big[,2,,i]- LEF_both_coefs_big[,1,,i], na.rm = TRUE))
sd_lengths_coefs_big[4,i] <- sd(rowMeans(sandwich_coefs_big[,2,,i]- sandwich_coefs_big[,1,,i], na.rm = TRUE))
sd_lengths_treat_big[1,i] <- sd(rowMeans(bootstrap_treat_big[,2,,i]- bootstrap_treat_big[,1,,i], na.rm = TRUE))
sd_lengths_treat_big[2,i] <- sd(rowMeans(LEF_outcome_treat_big[,2,,i]- LEF_outcome_treat_big[,1,,i], na.rm = TRUE))
sd_lengths_treat_big[3,i] <- sd(rowMeans(LEF_both_treat_big[,2,,i]- LEF_both_treat_big[,1,,i], na.rm = TRUE))
sd_lengths_treat_big[4,i] <- sd(rowMeans(sandwich_treat_big[,2,,i]- sandwich_treat_big[,1,,i], na.rm = TRUE))
mean_time_coefs[,i] <- rowMeans(time_coefs[,,i], na.rm = TRUE)
mean_time_treat[,i] <- rowMeans(time_treat[,,i], na.rm = TRUE)
mean_time_coefs_big[,i] <- rowMeans(time_coefs_big[,,i], na.rm = TRUE)
mean_time_treat_big[,i] <- rowMeans(time_treat_big[,,i], na.rm = TRUE)
}
for (i in 1:7){
mean_lengths_size[1,i] <- mean(rowMeans(bootstrap_size[,2,,i]- bootstrap_size[,1,,i], na.rm = TRUE))
mean_lengths_size[2,i] <- mean(rowMeans(LEF_outcome_size[,2,,i]- LEF_outcome_size[,1,,i], na.rm = TRUE))
mean_lengths_size[3,i] <- mean(rowMeans(LEF_both_size[,2,,i]- LEF_both_size[,1,,i], na.rm = TRUE))
mean_lengths_size[4,i] <- mean(rowMeans(sandwich_size[,2,,i]- sandwich_size[,1,,i], na.rm = TRUE))
sd_lengths_size[1,i] <- sd(rowMeans(bootstrap_size[,2,,i]- bootstrap_size[,1,,i], na.rm = TRUE))
sd_lengths_size[2,i] <- sd(rowMeans(LEF_outcome_size[,2,,i]- LEF_outcome_size[,1,,i], na.rm = TRUE))
sd_lengths_size[3,i] <- sd(rowMeans(LEF_both_size[,2,,i]- LEF_both_size[,1,,i], na.rm = TRUE))
sd_lengths_size[4,i] <- sd(rowMeans(sandwich_size[,2,,i]- sandwich_size[,1,,i], na.rm = TRUE))
mean_time_size[,i] <- rowMeans(time_size[,,i], na.rm = TRUE)
}
######### MEAN LENGTH PLOTS ###################
p1 <- ggplot() +
geom_line(aes(x = 1:9/10, y = mean_lengths_coefs[1,], colour = "Bootstrap")) +
geom_point(aes(x = 1:9/10, y = mean_lengths_coefs[1,], colour = "Bootstrap")) +
geom_line(aes(x = 1:9/10, y = mean_lengths_coefs[2,], colour = "LEF outcome")) +
geom_point(aes(x = 1:9/10, y = mean_lengths_coefs[2,], colour = "LEF outcome")) +
geom_line(aes(x = 1:9/10, y = mean_lengths_coefs[3,], colour = "LEF both")) +
geom_point(aes(x = 1:9/10, y = mean_lengths_coefs[3,], colour = "LEF both")) +
geom_line(aes(x = 1:9/10, y = mean_lengths_coefs[4,], colour = "Sandwich")) +
geom_point(aes(x = 1:9/10, y = mean_lengths_coefs[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Confounding strength\n(N = 1000, Treat. prev = 0)',
y = "Mean CI length")+ theme(axis.text = element_text(size = 8))
p2 <- ggplot() +
geom_line(aes(x = treat_pos, y = mean_lengths_treat[1,], colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat[1,], colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = mean_lengths_treat[2,], colour = "LEF outcome")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat[2,], colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = mean_lengths_treat[3,], colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat[3,], colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = mean_lengths_treat[4,], colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Treatment prevalence\n(N = 1000, Confounding = 0.5)',
y = "Mean CI length")+ theme(axis.text = element_text(size = 8))
p3 <- ggplot() +
geom_line(aes(x = sizes*100, y = mean_lengths_size[1,], colour = "Bootstrap")) +
geom_point(aes(x = sizes*100, y = mean_lengths_size[1,], colour = "Bootstrap")) +
geom_line(aes(x = sizes*100, y = mean_lengths_size[2,], colour = "LEF outcome")) +
geom_point(aes(x = sizes*100, y = mean_lengths_size[2,], colour = "LEF outcome")) +
geom_line(aes(x = sizes*100, y = mean_lengths_size[3,], colour = "LEF both")) +
geom_point(aes(x = sizes*100, y = mean_lengths_size[3,], colour = "LEF both")) +
geom_line(aes(x = sizes*100, y = mean_lengths_size[4,], colour = "Sandwich")) +
geom_point(aes(x = sizes*100, y = mean_lengths_size[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Patient sample size\n(Confounding  = 0.5, Treat. prev = 0)',
y = "Mean CI length")+ theme(axis.text = element_text(size = 8))
figureA <- ggarrange(p1 + rremove("ylab"),p2 + rremove("ylab"),p3 + rremove("ylab"), nrow = 1, ncol = 3, common.legend = T, legend = 'none')
figureA <- annotate_figure(figureA,top = text_grob("Mean CI length",size = 14), left = text_grob("Mean CI length",size = 10, rot =  90))
p1_sd <- ggplot() +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs[1,], colour = "Bootstrap")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs[1,], colour = "Bootstrap")) +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs[2,], colour = "LEF outcome")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs[2,], colour = "LEF outcome")) +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs[3,], colour = "LEF both")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs[3,], colour = "LEF both")) +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs[4,], colour = "Sandwich")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Confounding strength\n(N = 1000, Treat. prev = 0)',
y = "Standard deviation of CI length")+ theme(axis.text = element_text(size = 8))
p2_sd <- ggplot() +
geom_line(aes(x = treat_pos, y = sd_lengths_treat[1,], colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat[1,], colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = sd_lengths_treat[2,], colour = "LEF outcome")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat[2,], colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = sd_lengths_treat[3,], colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat[3,], colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = sd_lengths_treat[4,], colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Treatment prevalence\n(N = 1000, Confounding = 0.5)',
y = "Standard deviation of CI length")+ theme(axis.text = element_text(size = 8))
p3_sd <- ggplot() +
geom_line(aes(x = sizes*100, y = sd_lengths_size[1,], colour = "Bootstrap")) +
geom_point(aes(x = sizes*100, y = sd_lengths_size[1,], colour = "Bootstrap")) +
geom_line(aes(x = sizes*100, y = sd_lengths_size[2,], colour = "LEF outcome")) +
geom_point(aes(x = sizes*100, y = sd_lengths_size[2,], colour = "LEF outcome")) +
geom_line(aes(x = sizes*100, y = sd_lengths_size[3,], colour = "LEF both")) +
geom_point(aes(x = sizes*100, y = sd_lengths_size[3,], colour = "LEF both")) +
geom_line(aes(x = sizes*100, y = sd_lengths_size[4,], colour = "Sandwich")) +
geom_point(aes(x = sizes*100, y = sd_lengths_size[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Patient sample size\n(Confounding  = 0.5, Treat. prev = 0)',
y = "Standard deviation of CI length")+ theme(axis.text = element_text(size = 8))
figureA_sd <- ggarrange(p1_sd + rremove("ylab"),p2_sd + rremove("ylab"),p3_sd + rremove("ylab"), nrow = 1, ncol = 3, common.legend = T, legend = 'bottom')
figureA_sd <- annotate_figure(figureA_sd,top = text_grob("Standard deviation of CI length",size = 14), left = text_grob("CI length SD",size = 10, rot =  90))
ggarrange(heights = c(4, 4.9),figureA, figureA_sd, nrow = 2, ncol = 1)
######### MEAN LENGTH PLOTS BIG #################
p1 <- ggplot() +
geom_line(aes(x = 1:9/10, y = mean_lengths_coefs_big[1,], colour = "Bootstrap")) +
geom_point(aes(x = 1:9/10, y = mean_lengths_coefs_big[1,], colour = "Bootstrap")) +
geom_line(aes(x = 1:9/10, y = mean_lengths_coefs_big[2,], colour = "LEF outcome")) +
geom_point(aes(x = 1:9/10, y = mean_lengths_coefs_big[2,], colour = "LEF outcome")) +
geom_line(aes(x = 1:9/10, y = mean_lengths_coefs_big[3,], colour = "LEF both")) +
geom_point(aes(x = 1:9/10, y = mean_lengths_coefs_big[3,], colour = "LEF both")) +
geom_line(aes(x = 1:9/10, y = mean_lengths_coefs_big[4,], colour = "Sandwich")) +
geom_point(aes(x = 1:9/10, y = mean_lengths_coefs_big[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Confounding strength\n(N = 1000, Treat. prev = 0)',
y = "Mean CI length")+ theme(axis.text = element_text(size = 8))
p2 <- ggplot() +
geom_line(aes(x = treat_pos, y = mean_lengths_treat_big[1,], colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat_big[1,], colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = mean_lengths_treat_big[2,], colour = "LEF outcome")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat_big[2,], colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = mean_lengths_treat_big[3,], colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat_big[3,], colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = mean_lengths_treat_big[4,], colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = mean_lengths_treat_big[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Treatment prevalence\n(N = 1000, Confounding = 0.5)',
y = "Mean CI length")+ theme(axis.text = element_text(size = 8))
figureA <- ggarrange(p1 + rremove("ylab"),p2 + rremove("ylab"), nrow = 1, ncol = 2, common.legend = T, legend = 'none')
figureA <- annotate_figure(figureA,top = text_grob("Mean CI length",size = 14), left = text_grob("Mean CI length",size = 10, rot =  90))
p1_sd <- ggplot() +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs_big[1,], colour = "Bootstrap")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs_big[1,], colour = "Bootstrap")) +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs_big[2,], colour = "LEF outcome")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs_big[2,], colour = "LEF outcome")) +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs_big[3,], colour = "LEF both")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs_big[3,], colour = "LEF both")) +
geom_line(aes(x = 1:9/10, y = sd_lengths_coefs_big[4,], colour = "Sandwich")) +
geom_point(aes(x = 1:9/10, y = sd_lengths_coefs_big[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Confounding strength\n(N = 1000, Treat. prev = 0)',
y = "Standard deviation of CI length")+ theme(axis.text = element_text(size = 8))
p2_sd <- ggplot() +
geom_line(aes(x = treat_pos, y = sd_lengths_treat_big[1,], colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat_big[1,], colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = sd_lengths_treat_big[2,], colour = "LEF outcome")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat_big[2,], colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = sd_lengths_treat_big[3,], colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat_big[3,], colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = sd_lengths_treat_big[4,], colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = sd_lengths_treat_big[4,], colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
labs(x = 'Treatment prevalence\n(N = 1000, Confounding = 0.5)',
y = "Standard deviation of CI length")+ theme(axis.text = element_text(size = 8))
figureA_sd <- ggarrange(p1_sd + rremove("ylab"),p2_sd + rremove("ylab"), nrow = 1, ncol = 2, common.legend = T, legend = 'bottom')
figureA_sd <- annotate_figure(figureA_sd,top = text_grob("Standard deviation of CI length",size = 14), left = text_grob("CI length SD",size = 10, rot =  90))
ggarrange(heights = c(4, 4.9),figureA, figureA_sd, nrow = 2, ncol = 1)
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
success_coefs[1,,]
success_coefs[4,,]
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
gc()
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
p10 <- ggplot() +
geom_line(aes(x = treat_pos, y = (1000-success_treat_big[1,,1])/1000, colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = (1000-success_treat_big[1,,1])/1000, colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = (1000-success_treat_big[2,,1])/1000, colour = "LEF outcome")) +
geom_point(aes(x = treat_pos, y = (1000-success_treat_big[2,,1])/1000, colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = (1000-success_treat_big[3,,1])/1000, colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = (1000-success_treat_big[3,,1])/1000, colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = (1000-success_treat_big[4,,1])/1000, colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = (1000-success_treat_big[4,,1])/1000, colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple")) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
labs(x = 'Treatment prevalence\n(N = 5000, Confounding = 0.5)',
y = "Method failure rate")+ ylim(0,0.4) + theme(plot.title = element_text(size=10))+ theme(axis.title = element_text(size = 10))
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/results_plots_red_LEF.R", echo=TRUE)
p25 <- ggplot() +
geom_line(aes(x = 1:9/10, y = rowMeans(SE_coefs[1,,]), colour = "Bootstrap")) +
geom_point(aes(x = 1:9/10, y = rowMeans(SE_coefs[1,,]), colour = "Bootstrap")) +
geom_line(aes(x = 1:9/10, y = rowMeans(SE_coefs[2,,]), colour = "LEF outcome")) +
geom_point(aes(x = 1:9/10, y = rowMeans(SE_coefs[2,,]), colour = "LEF outcome")) +
geom_line(aes(x = 1:9/10, y = rowMeans(SE_coefs[3,,]), colour = "LEF both")) +
geom_point(aes(x = 1:9/10, y = rowMeans(SE_coefs[3,,]), colour = "LEF both")) +
geom_line(aes(x = 1:9/10, y = rowMeans(SE_coefs[4,,]), colour = "Sandwich")) +
geom_point(aes(x = 1:9/10, y = rowMeans(SE_coefs[4,,]), colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple"))+
labs(x = 'Confounding strength\n(N = 1000, Treat. prev = 0)',
y = "Monte Carlo SE") +ylim(0,0.02)+ theme(aspect.ratio = 1, axis.title = element_text(size = 10))
p26 <- ggplot() +
geom_line(aes(x = treat_pos, y = rowMeans(SE_treat[1,,]), colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = rowMeans(SE_treat[1,,]), colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = rowMeans(SE_treat[2,,]), colour = "LEF outcome")) +
geom_point(aes(x = treat_pos, y = rowMeans(SE_treat[2,,]), colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = rowMeans(SE_treat[3,,]), colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = rowMeans(SE_treat[3,,]), colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = rowMeans(SE_treat[4,,]), colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = rowMeans(SE_treat[4,,]), colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple"))+
labs(x = 'Treatment prevalence\n(N = 1000, Confounding = 0.5)',
y = "Monte Carlo SE") +ylim(0,0.02)+ theme(aspect.ratio = 1, axis.title = element_text(size = 10))
p27 <- ggplot() +
geom_line(aes(x = sizes*100, y = rowMeans(SE_size[1,,]), colour = "Bootstrap")) +
geom_point(aes(x = sizes*100, y = rowMeans(SE_size[1,,]), colour = "Bootstrap")) +
geom_line(aes(x = sizes*100, y = rowMeans(SE_size[2,,]), colour = "LEF outcome")) +
geom_point(aes(x = sizes*100, y = rowMeans(SE_size[2,,]), colour = "LEF outcome")) +
geom_line(aes(x = sizes*100, y = rowMeans(SE_size[3,,]), colour = "LEF both")) +
geom_point(aes(x = sizes*100, y = rowMeans(SE_size[3,,]), colour = "LEF both")) +
geom_line(aes(x = sizes*100, y = rowMeans(SE_size[4,,]), colour = "Sandwich")) +
geom_point(aes(x = sizes*100, y = rowMeans(SE_size[4,,]), colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple"))+
labs(x = 'Patient sample size N\n(Confounding  = 0.5, Treat. prev = 0)',
y = "Monte Carlo SE") +ylim(0,0.02)+ theme(aspect.ratio = 1, axis.title = element_text(size = 10))
figure7 <- ggarrange(p25 + rremove("ylab"),p26 + rremove("ylab"),p27 + rremove("ylab"), nrow = 1, ncol = 3, common.legend = T, legend = 'bottom')
figure7 <- annotate_figure(figure7,top = text_grob("Monte Carlo Simulation Standard Error",size = 14), left = text_grob("Monte Carlo SE",size = 10, rot =  90))
figure7
############### MC ERROR BIG ######################
p28 <- ggplot() +
geom_line(aes(x = 1:9/10, y = rowMeans(SE_coefs_big[1,,]), colour = "Bootstrap")) +
geom_point(aes(x = 1:9/10, y = rowMeans(SE_coefs_big[1,,]), colour = "Bootstrap")) +
geom_line(aes(x = 1:9/10, y = rowMeans(SE_coefs_big[2,,]), colour = "LEF outcome")) +
geom_point(aes(x = 1:9/10, y = rowMeans(SE_coefs_big[2,,]), colour = "LEF outcome")) +
geom_line(aes(x = 1:9/10, y = rowMeans(SE_coefs_big[3,,]), colour = "LEF both")) +
geom_point(aes(x = 1:9/10, y = rowMeans(SE_coefs_big[3,,]), colour = "LEF both")) +
geom_line(aes(x = 1:9/10, y = rowMeans(SE_coefs_big[4,,]), colour = "Sandwich")) +
geom_point(aes(x = 1:9/10, y = rowMeans(SE_coefs_big[4,,]), colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple"))+
labs(x = 'Confounding strength\n(N = 5000, Treat. prev = 0)',
y = "Monte Carlo SE") +ylim(0,0.02)+ theme(aspect.ratio = 1, axis.title = element_text(size = 10))
p29 <- ggplot() +
geom_line(aes(x = treat_pos, y = rowMeans(SE_treat_big[1,,]), colour = "Bootstrap")) +
geom_point(aes(x = treat_pos, y = rowMeans(SE_treat_big[1,,]), colour = "Bootstrap")) +
geom_line(aes(x = treat_pos, y = rowMeans(SE_treat_big[2,,]), colour = "LEF outcome")) +
geom_point(aes(x =treat_pos, y = rowMeans(SE_treat_big[2,,]), colour = "LEF outcome")) +
geom_line(aes(x = treat_pos, y = rowMeans(SE_treat_big[3,,]), colour = "LEF both")) +
geom_point(aes(x = treat_pos, y = rowMeans(SE_treat_big[3,,]), colour = "LEF both")) +
geom_line(aes(x = treat_pos, y = rowMeans(SE_treat_big[4,,]), colour = "Sandwich")) +
geom_point(aes(x = treat_pos, y = rowMeans(SE_treat_big[4,,]), colour = "Sandwich")) +
scale_color_manual(name = "CI type", values = c("Bootstrap"= "red", "Sandwich" = "blue",
"LEF outcome" = "green", "LEF both" = "purple"))+
labs(x = 'Treatment prevalence\n(N = 5000, Confounding = 0.5)',
y = "Monte Carlo SE") +ylim(0,0.02)+ theme(aspect.ratio = 1, axis.title = element_text(size = 10))
figure8 <- ggarrange(p28 + rremove("ylab"),p29 + rremove("ylab"), nrow = 1, ncol = 2, common.legend = T, legend = 'bottom')
figure8 <- annotate_figure(figure8,top = text_grob("Monte Carlo Simulation Standard Error",size = 14), left = text_grob("Monte Carlo SE",size = 10, rot =  90))
figure8
