library(modelr)
library(tidyverse)
library(tidyr)
source("simulate_MSM_simplified.R")
set.seed(NULL)
library(RandomisedTrialsEmulation)
library(MASS)
library(sandwich)
library(doParallel)
library(doRNG)
j <- 0.1
#Generate simulated data with specific confounding strength
simdata_censored_conf<-DATA_GEN_censored_reduced(1000, 5, conf = j)
source("simulate_MSM_simplified.R")
wd()
source("simulate_MSM_simplified.R")
source("~/Documents/MPhil PHS 21-22/MPhil-dissertation/Code/simulate_MSM_simplified.R", echo=TRUE)
#Generate simulated data with specific confounding strength
simdata_censored_conf<-DATA_GEN_censored_reduced(1000, 5, conf = j)
PP_prep <- RandomisedTrialsEmulation::data_preparation(simdata_censored_conf, id='ID', period='t', treatment='A', outcome='Y',
eligible ='eligible',cense = 'C',
switch_d_cov = ~X2 + X4,
outcome_cov = ~X2 + X4, model_var = c('assigned_treatment'),
cense_d_cov = ~X2 + X4, pool_cense=1,
include_expansion_time_case = ~1, include_followup_time_case = ~1,
include_regime_length = F,
use_weight=1, use_censor=1, numCores = 1, quiet = T)
switch_data <- PP_prep$data %>%
dplyr::mutate(t_1 = ifelse(followup_time == 1,1,0),
t_2 = ifelse(followup_time == 2,1,0),
t_3 = ifelse(followup_time == 3,1,0),
t_4 = ifelse(followup_time == 4,1,0),
t_1A = t_1*assigned_treatment,
t_2A = t_2*assigned_treatment,
t_3A = t_3*assigned_treatment,
t_4A = t_4*assigned_treatment,
t_1X2 = t_1*X2,
t_2X2 = t_2*X2,
t_3X2 = t_3*X2,
t_4X2 = t_4*X2,
t_1X4 = t_1*X4,
t_2X4 = t_2*X4,
t_3X4 = t_3*X4,
t_4X4 = t_4*X4)
View(simdata_censored_conf)
View(switch_data)
remotes::install_github("CAM-Roche/RandomisedTrialsEmulation")
remotes::install_github("CAM-Roche/RandomisedTrialsEmulation", force = TRUE)
library(modelr)
library(tidyverse)
library(tidyr)
source("simulate_MSM_simplified.R")
set.seed(NULL)
library(RandomisedTrialsEmulation)
library(MASS)
library(sandwich)
library(doParallel)
library(doRNG)
source("Code/simulate_MSM_simplified.R")
source("Code/simulate_MSM_simplified.R")
set.seed(NULL)
library(RandomisedTrialsEmulation)
library(MASS)
library(sandwich)
library(doParallel)
library(doRNG)
#Generate simulated data with specific confounding strength
simdata_censored_conf<-DATA_GEN_censored_reduced(1000, 5, conf = j)
PP_prep <- RandomisedTrialsEmulation::data_preparation(simdata_censored_conf, id='ID', period='t', treatment='A', outcome='Y',
eligible ='eligible',cense = 'C',
switch_d_cov = ~X2 + X4,
outcome_cov = ~X2 + X4, model_var = c('assigned_treatment'),
cense_d_cov = ~X2 + X4, pool_cense=1,
include_expansion_time_case = ~1, include_followup_time_case = ~1,
include_regime_length = F,
use_weight=1, use_censor=1, numCores = 1, quiet = T)
switch_data <- PP_prep$data %>%
dplyr::mutate(t_1 = ifelse(followup_time == 1,1,0),
t_2 = ifelse(followup_time == 2,1,0),
t_3 = ifelse(followup_time == 3,1,0),
t_4 = ifelse(followup_time == 4,1,0),
t_1A = t_1*assigned_treatment,
t_2A = t_2*assigned_treatment,
t_3A = t_3*assigned_treatment,
t_4A = t_4*assigned_treatment,
t_1X2 = t_1*X2,
t_2X2 = t_2*X2,
t_3X2 = t_3*X2,
t_4X2 = t_4*X2,
t_1X4 = t_1*X4,
t_2X4 = t_2*X4,
t_3X4 = t_3*X4,
t_4X4 = t_4*X4)
View(switch_data)
View(simdata_censored_conf)
load('Code/switch_data.rsa')
load('Code/switch_data.rda')
load('Code/HPC\ output/switch_data.rda')
load('Code/HPC\ output/data.rda')
View(simdata_censored_conf)
View(switch_data)
switch_data <- PP_prep$data %>%
dplyr::mutate(t_1 = ifelse(followup_time == 1,1,0),
t_2 = ifelse(followup_time == 2,1,0),
t_3 = ifelse(followup_time == 3,1,0),
t_4 = ifelse(followup_time == 4,1,0),
t_1A = t_1*assigned_treatment,
t_2A = t_2*assigned_treatment,
t_3A = t_3*assigned_treatment,
t_4A = t_4*assigned_treatment,
t_1X2 = t_1*X2,
t_2X2 = t_2*X2,
t_3X2 = t_3*X2,
t_4X2 = t_4*X2,
t_1X4 = t_1*X4,
t_2X4 = t_2*X4,
t_3X4 = t_3*X4,
t_4X4 = t_4*X4)
PP <- RandomisedTrialsEmulation::data_modelling(data = switch_data,
outcome_cov = ~ X2 + X4+ assigned_treatment+
t_1 + t_2 + t_3 + t_4 +
t_1A + t_2A + t_3A + t_4A +
t_1X2 + t_2X2 + t_3X2 + t_4X2 +
t_1X4 + t_2X4 + t_3X4 + t_4X4,
model_var = c('assigned_treatment'),
glm_function = 'glm',
include_expansion_time_case = ~1, include_followup_time_case = ~1,
use_weight=1, use_censor=1, numCores = 1, quiet = T, use_sample_weights =  F)
library(modelr)
library(tidyverse)
library(tidyr)
source("simulate_MSM_simplified.R")
set.seed(20222022)
library(MASS)
library(survival)
library(survminer)
library(lubridate)
library(ggplot2)
library(pammtools)
i <- 0.1
simdata_censored_conf<-DATA_GEN_censored_reduced(1000000, 5, conf = i)
PP_prep <- RandomisedTrialsEmulation::data_preparation(simdata_censored_conf, id='ID', period='t', treatment='A', outcome='Y',
eligible ='eligible',cense = 'C',
switch_d_cov = ~X2 + X4,
outcome_cov = ~X2 + X4, model_var = c('assigned_treatment'),
cense_d_cov = ~X2 + X4, pool_cense=1,
include_expansion_time_case = ~1, include_followup_time_case = ~1,
include_regime_length = F,
use_weight=1, use_censor=1, numCores = 1, quiet = F)
source("simulate_MSM_simplified.R")
source("Code/simulate_MSM_simplified.R")
set.seed(20222022)
library(MASS)
library(survival)
library(survminer)
library(lubridate)
library(ggplot2)
library(pammtools)
i <- 0.1
##################################################################
simdata_censored_conf<-DATA_GEN_censored_reduced(1000000, 5, conf = i)
PP_prep <- RandomisedTrialsEmulation::data_preparation(simdata_censored_conf, id='ID', period='t', treatment='A', outcome='Y',
eligible ='eligible',cense = 'C',
switch_d_cov = ~X2 + X4,
outcome_cov = ~X2 + X4, model_var = c('assigned_treatment'),
cense_d_cov = ~X2 + X4, pool_cense=1,
include_expansion_time_case = ~1, include_followup_time_case = ~1,
include_regime_length = F,
use_weight=1, use_censor=1, numCores = 1, quiet = F)
PP_prep <- RandomisedTrialsEmulation::data_preparation(simdata_censored_conf, id='ID', period='t', treatment='A', outcome='Y',
eligible ='eligible',cense = 'C',
switch_d_cov = ~X2 + X4,
outcome_cov = ~X2 + X4, model_var = c('assigned_treatment'),
cense_d_cov = ~ AP + X2 + X4, pool_cense=1,
include_expansion_time_case = ~1, include_followup_time_case = ~1,
include_regime_length = F,
use_weight=1, use_censor=1, numCores = 1, quiet = F)
PP_prep <- RandomisedTrialsEmulation::data_preparation(simdata_censored_conf, id='ID', period='t', treatment='A', outcome='Y',
eligible ='eligible',cense = 'C',
switch_d_cov = ~X2 + X4,
outcome_cov = ~X2 + X4, model_var = c('assigned_treatment'),
cense_d_cov = ~ Ap + X2 + X4, pool_cense=1,
include_expansion_time_case = ~1, include_followup_time_case = ~1,
include_regime_length = F,
use_weight=1, use_censor=1, numCores = 1, quiet = F)
View(simdata_censored_conf)
?data_preparation
PP_prep <- RandomisedTrialsEmulation::data_preparation(simdata_censored_conf, id='ID', period='t', treatment='A',
outcome='Y',
eligible ='eligible',cense = 'C',
switch_d_cov = ~X2 + X4,
outcome_cov = ~X2 + X4, model_var = c('assigned_treatment'),
cense_d_cov = ~ X2 + X4,
include_expansion_time_case = ~1, include_followup_time_case = ~1,
include_regime_length = F,
use_weight=1, use_censor=1, numCores = 1, quiet = F)
