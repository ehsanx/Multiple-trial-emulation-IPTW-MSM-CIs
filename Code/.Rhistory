E = 0
R = 0
S = 3.3*10^6 - I
N = S+ E + I + R
TStep = 1
TMax = 364*100
sigma = 1/8
gamma = 1/5
b = 0.02/364
for(t in 2:length(seq(TStep,TMax,TStep)))
{
S[t] = S[t-1] + b*N - b*S[t-1] - terms[(t-1)%%364+1] * I[t-1] * S[t-1]/N
E[t] = E[t-1] + terms[(t-1)%%364+1] * I[t-1] * S[t-1]/N - sigma*E[t-1] - b*E[t-1]
I[t] = I[t-1] + sigma*E[t-1] - gamma*I[t-1] - b*I[t-1]
R[t] = R[t-1] + gamma * I[t-1] - b*R[t-1]
}
plot(365:TMax, I[365:TMax], col = "blue")
knitr::opts_chunk$set(echo = TRUE)
library(survival)
library(survminer)
library(lubridate)
library(tidyverse)
library(rjags)
library(posterior)
library(bayesplot)
library(ggplot2)
library(tidybayes)
dat <- read.csv("hf_hosp.csv")
ggsurvplot(
fit = survfit(Surv(days, event) ~ 1, data = dat),
xlab = "Days",
ylab = "Survival probability",
title = "Kaplan-Meier curve of estimated probability of time to readmission")
ggsurvplot(
fit = survfit(Surv(days, event) ~ male, data = dat),
xlab = "Days",
ylab = "survival probability",
legend.labs = c('Female', 'Male'),
title = "Kaplan-Meier curve of estimated probability of time to readmission, grouped by sex")
summary(dat)
sd <- survdiff(Surv(days, event) ~ male, data = dat)
1 - pchisq(sd$chisq, length(sd$n) - 1)
dat$y <- dat$days
dat$c <- dat$days
dat[which(dat$event == 0), 'y'] <- NA
dat[which(dat$event == 1), 'c'] <- Inf
dat$is.censored <- 1- dat$event
data_jags <- compose_data(dat)
data_jags <- append(data_jags, list(n_hosp = 10))
surv_model <- "
model {
for (i in 1:n){
y[i] ~ dweib(alpha, lambda[i]) # likelihood for observed data
y_pred[i] ~ dweib(alpha, lambda[i])
is.censored[i] ~ dinterval(y[i], c[i])
log(lambda[i]) <- beta_0 +
beta_male[hospital[i]]*male[i] +
beta_age[hospital[i]]*(age[i]-60)/10
}
for (z in 1:n_hosp) {
beta_male[z] ~ dnorm(mu_male, sigma_male.prec)
beta_age[z] ~ dnorm(mu_age, sigma_age.prec)
}
mu_male ~ dnorm(0.1, 1/100^2)
mu_age ~ dnorm(0, 1/100^2)
# random effects SD (between-zone SD of mean THM)
sigma_male.sd ~ dunif(0, 100)
sigma_male.var <- pow(sigma_male.sd, 2)
sigma_male.prec <- 1 / sigma_male.var
sigma_age.sd ~ dunif(0, 100)
sigma_age.var <- pow(sigma_age.sd, 2)
sigma_age.prec <- 1 / sigma_age.var
beta_0 ~ dnorm(0.1,1/2.5^2)
alpha ~ dgamma(1,1)
}
"
ini <- list(list(y = ifelse(is.na(dat$y), dat$c+1, NA), alpha = 1, mu_male = 0, mu_age = 0,
sigma_male.sd = 0.1, sigma_age.sd = 0.1, beta_0 = 0),
list(y = ifelse(is.na(dat$y), dat$c+1, NA), alpha = 1, mu_male = 0.2, mu_age = 0.1,
sigma_male.sd = 0.1, sigma_age.sd = 0.1, beta_0 = -0.1))
par <- c("alpha", "mu_male", "mu_age","sigma_male.sd", "sigma_age.sd", "beta_0",
"beta_male", "beta_age")
hosp_jag <- jags.model(textConnection(surv_model),
data = data_jags,
inits = ini,
n.chains = 2,
quiet = TRUE)
update(hosp_jag, 10000)
sam <- coda.samples(hosp_jag,
n.iter = 10000,
variable.names = par)
hosp_draws <- as_draws(sam)
estimates <- summary(hosp_draws, ~quantile(.x,probs = c(0.5, 0.025,0.975)))
estimates[2:22,c('50%', '2.5%', '97.5%')] <- exp(estimates[2:22,c('50%', '2.5%', '97.5%')])
estimates
hospitals <- list(J = c(1:10), y1 = t(estimates[c(3:12), c(2)]),
y2 =  t(estimates[c(13:22), c(2)]),
lb1 = t(estimates[c(3:12), c(3)]),
up1 = t(estimates[c(3:12), c(4)]),
lb2 = t(estimates[c(13:22), c(3)]),
up2 = t(estimates[c(13:22), c(4)]))
plot(1:10,hospitals$y1, pch = 4, col = 'red', lwd = 3, ylim = c(0.5,2.5),
ylab = 'Posterior effect', xlab = 'Hospital', main = 'Posterior age hazard ratio', xaxp  = c(1, 10, 9))
arrows(1:10, hospitals$lb1, 1:10, hospitals$up1,
length=0.05, angle=90, code=3, col = 'green', lwd = 2)
abline(h = 0, lty = 2)
plot(1:10,hospitals$y2, pch = 4, col = 'red', lwd = 3, ylim = c(0.5,2.5),
ylab = 'Posterior effect', xlab = 'Hospital', main = 'Gender Hazard Ratio', xaxp  = c(1, 10, 9))
arrows(1:10, hospitals$lb2, 1:10, hospitals$up2,
length=0.05, angle=90, code=3, col = 'green', lwd = 2)
abline(h = 0, lty = 2)
mcmc_trace(sam)
knitr::opts_chunk$set(echo = TRUE)
library(survival)
library(survminer)
library(lubridate)
library(tidyverse)
library(rjags)
library(posterior)
library(bayesplot)
library(ggplot2)
library(tidybayes)
dat <- read.csv("hf_hosp.csv")
ggsurvplot(
fit = survfit(Surv(days, event) ~ 1, data = dat),
xlab = "Days",
ylab = "Survival probability",
title = "Kaplan-Meier curve of estimated probability of time to readmission")
ggsurvplot(
fit = survfit(Surv(days, event) ~ male, data = dat),
xlab = "Days",
ylab = "survival probability",
legend.labs = c('Female', 'Male'),
title = "Kaplan-Meier curve of estimated probability of time to readmission, grouped by sex")
summary(dat)
sd <- survdiff(Surv(days, event) ~ male, data = dat)
1 - pchisq(sd$chisq, length(sd$n) - 1)
dat$y <- dat$days
dat$c <- dat$days
dat[which(dat$event == 0), 'y'] <- NA
dat[which(dat$event == 1), 'c'] <- Inf
dat$is.censored <- 1- dat$event
data_jags <- compose_data(dat)
data_jags <- append(data_jags, list(n_hosp = 10))
surv_model <- "
model {
for (i in 1:n){
y[i] ~ dweib(alpha, lambda[i]) # likelihood for observed data
y_pred[i] ~ dweib(alpha, lambda[i])
is.censored[i] ~ dinterval(y[i], c[i])
log(lambda[i]) <- beta_0 +
beta_male[hospital[i]]*male[i] +
beta_age[hospital[i]]*(age[i]-60)/10
}
for (z in 1:n_hosp) {
beta_male[z] ~ dnorm(mu_male, sigma_male.prec)
beta_age[z] ~ dnorm(mu_age, sigma_age.prec)
}
mu_male ~ dnorm(0.1, 1/100^2)
mu_age ~ dnorm(0, 1/100^2)
# random effects SD (between-zone SD of mean THM)
sigma_male.sd ~ dunif(0, 100)
sigma_male.var <- pow(sigma_male.sd, 2)
sigma_male.prec <- 1 / sigma_male.var
sigma_age.sd ~ dunif(0, 100)
sigma_age.var <- pow(sigma_age.sd, 2)
sigma_age.prec <- 1 / sigma_age.var
beta_0 ~ dnorm(0.1,1/2.5^2)
alpha ~ dgamma(1,1)
}
"
ini <- list(list(y = ifelse(is.na(dat$y), dat$c+1, NA), alpha = 1, mu_male = 0, mu_age = 0,
sigma_male.sd = 0.1, sigma_age.sd = 0.1, beta_0 = 0),
list(y = ifelse(is.na(dat$y), dat$c+1, NA), alpha = 1, mu_male = 0.2, mu_age = 0.1,
sigma_male.sd = 0.1, sigma_age.sd = 0.1, beta_0 = -0.1))
par <- c("alpha", "mu_male", "mu_age","sigma_male.sd", "sigma_age.sd", "beta_0",
"beta_male", "beta_age")
hosp_jag <- jags.model(textConnection(surv_model),
data = data_jags,
inits = ini,
n.chains = 2,
quiet = TRUE)
update(hosp_jag, 10000)
sam <- coda.samples(hosp_jag,
n.iter = 10000,
variable.names = par)
hosp_draws <- as_draws(sam)
estimates <- summary(hosp_draws, ~quantile(.x,probs = c(0.5, 0.025,0.975)))
estimates[2:22,c('50%', '2.5%', '97.5%')] <- exp(estimates[2:22,c('50%', '2.5%', '97.5%')])
estimates
knitr::opts_chunk$set(echo = TRUE)
library(survival)
library(survminer)
library(lubridate)
library(tidyverse)
library(rjags)
library(posterior)
library(bayesplot)
library(ggplot2)
library(tidybayes)
dat <- read.csv("hf_hosp.csv")
ggsurvplot(
fit = survfit(Surv(days, event) ~ 1, data = dat),
xlab = "Days",
ylab = "Survival probability",
title = "Kaplan-Meier curve of estimated probability of time to readmission")
ggsurvplot(
fit = survfit(Surv(days, event) ~ male, data = dat),
xlab = "Days",
ylab = "survival probability",
legend.labs = c('Female', 'Male'),
title = "Kaplan-Meier curve of estimated probability of time to readmission, grouped by sex")
summary(dat)
sd <- survdiff(Surv(days, event) ~ male, data = dat)
1 - pchisq(sd$chisq, length(sd$n) - 1)
dat$y <- dat$days
dat$c <- dat$days
dat[which(dat$event == 0), 'y'] <- NA
dat[which(dat$event == 1), 'c'] <- Inf
dat$is.censored <- 1- dat$event
data_jags <- compose_data(dat)
data_jags <- append(data_jags, list(n_hosp = 10))
surv_model <- "
model {
for (i in 1:n){
y[i] ~ dweib(alpha, lambda[i]) # likelihood for observed data
y_pred[i] ~ dweib(alpha, lambda[i])
is.censored[i] ~ dinterval(y[i], c[i])
log(lambda[i]) <- beta_0 +
beta_male[hospital[i]]*male[i] +
beta_age[hospital[i]]*(age[i]-60)/10
}
for (z in 1:n_hosp) {
beta_male[z] ~ dnorm(mu_male, sigma_male.prec)
beta_age[z] ~ dnorm(mu_age, sigma_age.prec)
}
mu_male ~ dnorm(0.1, 1/100^2)
mu_age ~ dnorm(0, 1/100^2)
# random effects SD (between-zone SD of mean THM)
sigma_male.sd ~ dunif(0, 100)
sigma_male.var <- pow(sigma_male.sd, 2)
sigma_male.prec <- 1 / sigma_male.var
sigma_age.sd ~ dunif(0, 100)
sigma_age.var <- pow(sigma_age.sd, 2)
sigma_age.prec <- 1 / sigma_age.var
beta_0 ~ dnorm(0.1,1/2.5^2)
alpha ~ dgamma(1,1)
}
"
ini <- list(list(y = ifelse(is.na(dat$y), dat$c+1, NA), alpha = 1, mu_male = 0, mu_age = 0,
sigma_male.sd = 0.1, sigma_age.sd = 0.1, beta_0 = 0),
list(y = ifelse(is.na(dat$y), dat$c+1, NA), alpha = 1, mu_male = 0.2, mu_age = 0.1,
sigma_male.sd = 0.1, sigma_age.sd = 0.1, beta_0 = -0.1))
par <- c("alpha", "mu_male", "mu_age","sigma_male.sd", "sigma_age.sd", "beta_0",
"beta_male", "beta_age")
hosp_jag <- jags.model(textConnection(surv_model),
data = data_jags,
inits = ini,
n.chains = 2,
quiet = TRUE)
update(hosp_jag, 10000)
sam <- coda.samples(hosp_jag,
n.iter = 10000,
variable.names = par)
hosp_draws <- as_draws(sam)
estimates <- summary(hosp_draws, ~quantile(.x,probs = c(0.5, 0.025,0.975)))
estimates[2:22,c('50%', '2.5%', '97.5%')] <- exp(estimates[2:22,c('50%', '2.5%', '97.5%')])
estimates
hospitals <- list(J = c(1:10), y1 = t(estimates[c(3:12), c(2)]),
y2 =  t(estimates[c(13:22), c(2)]),
lb1 = t(estimates[c(3:12), c(3)]),
up1 = t(estimates[c(3:12), c(4)]),
lb2 = t(estimates[c(13:22), c(3)]),
up2 = t(estimates[c(13:22), c(4)]))
plot(1:10,hospitals$y1, pch = 4, col = 'red', lwd = 3, ylim = c(0.5,2.5),
ylab = 'Posterior effect', xlab = 'Hospital', main = 'Posterior age hazard ratio', xaxp  = c(1, 10, 9))
arrows(1:10, hospitals$lb1, 1:10, hospitals$up1,
length=0.05, angle=90, code=3, col = 'green', lwd = 2)
abline(h = 0, lty = 2)
plot(1:10,hospitals$y2, pch = 4, col = 'red', lwd = 3, ylim = c(0.5,2.5),
ylab = 'Posterior effect', xlab = 'Hospital', main = 'Gender Hazard Ratio', xaxp  = c(1, 10, 9))
arrows(1:10, hospitals$lb2, 1:10, hospitals$up2,
length=0.05, angle=90, code=3, col = 'green', lwd = 2)
abline(h = 0, lty = 2)
y_pred_sample <- coda.samples(hosp_jag,
n.iter = 10000,
variable.names = c("y_pred"))
y_pred_draws <- as_draws_df(y_pred_sample)[, -c(1001:1003)]
sample_km <- as.data.frame(t(sample_n(y_pred_draws, 5)))
sample_km <- cbind(sample_km, dat)[,c(1:7)]
plot(survfit(Surv(days, event) ~ 1, data = sample_km),
xlab = "Days",
ylab = "Survival probability")
for (i in 1:5){
lines(survfit(Surv(sample_km[,c(i)], event) ~ 1, data = sample_km), col = "red")
}
library(survival, quiet = TRUE)
library(survminer, quiet = TRUE)
library(lubridate, quiet = TRUE)
library(tidyverse, quiet = TRUE)
library(rjags, quiet = TRUE)
library(posterior, quiet = TRUE)
library(bayesplot, quiet = TRUE)
library(ggplot2, quiet = TRUE)
library(tidybayes, quiet = TRUE)
dat <- read.csv("hf_hosp.csv")
ggsurvplot(
fit = survfit(Surv(days, event) ~ 1, data = dat),
xlab = "Days",
ylab = "Survival probability",
title = "Kaplan-Meier curve of estimated probability of time to readmission")
ggsurvplot(
fit = survfit(Surv(days, event) ~ male, data = dat),
xlab = "Days",
ylab = "survival probability",
legend.labs = c('Female', 'Male'),
title = "Kaplan-Meier curve of estimated probability of time to readmission, grouped by sex")
summary(dat)
expected_times <- tibble(age = c(30,50,70,90), gender =c(1,0), hospital = 1:10)
expected_times <- expand(age = c(30,50,70,90), gender =c(1,0), hospital = 1:10)
expected_times <- expand.grid(age = c(30,50,70,90), gender =c(1,0), hospital = 1:10)
View(expected_times)
hospitals <- list(J = c(1:10), y1 = t(estimates[c(3:12), c(2)]),
y2 =  t(estimates[c(13:22), c(2)]),
lb1 = t(estimates[c(3:12), c(3)]),
up1 = t(estimates[c(3:12), c(4)]),
lb2 = t(estimates[c(13:22), c(3)]),
up2 = t(estimates[c(13:22), c(4)]))
plot(1:10,hospitals$y2, pch = 4, col = 'red', lwd = 3, ylim = c(0.5,2.5),
ylab = 'Posterior effect', xlab = 'Hospital', main = 'Posterior gender hazard ratio', xaxp  = c(1, 10, 9))
arrows(1:10, hospitals$lb2, 1:10, hospitals$up2,
length=0.05, angle=90, code=3, col = 'green', lwd = 2)
abline(h = 0, lty = 2)
plot(1:10,hospitals$y1, pch = 4, col = 'red', lwd = 3, ylim = c(0.5,2.5),
ylab = 'Posterior effect', xlab = 'Hospital', main = 'Posterior age hazard ratio', xaxp  = c(1, 10, 9))
arrows(1:10, hospitals$lb1, 1:10, hospitals$up1,
length=0.05, angle=90, code=3, col = 'green', lwd = 2)
abline(h = 0, lty = 2)
y_pred_sample <- coda.samples(hosp_jag,
n.iter = 10000,
variable.names = c("y_pred"))
y_pred_draws <- as_draws_df(y_pred_sample)[, -c(1001:1003)]
sample_km <- as.data.frame(t(sample_n(y_pred_draws, 10)))
sample_km <- cbind(sample_km, dat)[,c(1:7)]
plot(survfit(Surv(days, event) ~ 1, data = sample_km),
xlab = "Days",
ylab = "Survival probability", conf.int = FALSE)
View(dat)
View(sample_km)
sample_km <- cbind(sample_km, dat)[,c(1:7)]
sample_km <- cbind(sample_km, dat)
sample_km <- as.data.frame(t(sample_n(y_pred_draws, 10)))
sample_km <- cbind(sample_km, dat)[,c(1:12)]
plot(survfit(Surv(days, event) ~ 1, data = sample_km),
xlab = "Days",
ylab = "Survival probability", conf.int = FALSE)
for (i in 1:10){
lines(survfit(Surv(sample_km[,c(i)], event) ~ 1, data = sample_km), col = "red",conf.int = FALSE)
}
library(survival, quiet = TRUE)
library(survminer, quiet = TRUE)
library(lubridate, quiet = TRUE)
library(tidyverse, quiet = TRUE)
library(rjags, quiet = TRUE)
library(posterior, quiet = TRUE)
library(bayesplot, quiet = TRUE)
library(ggplot2, quiet = TRUE)
library(tidybayes, quiet = TRUE)
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
plot(survfit(Surv(days, event) ~ 1, data = sample_km),
xlab = "Days",
ylab = "Survival probability", conf.int = TRUE)
for (i in 1:10){
lines(survfit(Surv(sample_km[,c(i)], event) ~ 1, data = sample_km), col = "red",conf.int = FALSE)
}
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
library(survival, quiet = TRUE)
library(survminer, quiet = TRUE)
library(lubridate, quiet = TRUE)
library(tidyverse, quiet = TRUE)
library(rjags, quiet = TRUE)
library(posterior, quiet = TRUE)
library(bayesplot, quiet = TRUE)
library(ggplot2, quiet = TRUE)
library(tidybayes, quiet = TRUE)
dat <- read.csv("hf_hosp.csv")
ggsurvplot(
fit = survfit(Surv(days, event) ~ 1, data = dat),
xlab = "Days",
ylab = "Survival probability",
title = "Kaplan-Meier curve of estimated probability of time to readmission")
ggsurvplot(
fit = survfit(Surv(days, event) ~ male, data = dat),
xlab = "Days",
ylab = "survival probability",
legend.labs = c('Female', 'Male'),
title = "Kaplan-Meier curve of estimated probability of time to readmission, grouped by sex")
sd <- survdiff(Surv(days, event) ~ male, data = dat)
1 - pchisq(sd$chisq, length(sd$n) - 1)
summary(dat)
surv_model <- "
model {
for (i in 1:n){
y[i] ~ dweib(alpha, lambda[i]) # likelihood for observed data
y_pred[i] ~ dweib(alpha, lambda[i])
is.censored[i] ~ dinterval(y[i], c[i])
log(lambda[i]) <- beta_0 +
beta_male[hospital[i]]*male[i] +
beta_age[hospital[i]]*(age[i]-60)/10
}
for (z in 1:n_hosp) {
beta_male[z] ~ dnorm(mu_male, sigma_male.prec)
beta_age[z] ~ dnorm(mu_age, sigma_age.prec)
}
mu_male ~ dnorm(0.1, 1/100^2)
mu_age ~ dnorm(0, 1/100^2)
# random effects SD (between-zone SD of mean THM)
sigma_male.sd ~ dunif(0, 100)
sigma_male.var <- pow(sigma_male.sd, 2)
sigma_male.prec <- 1 / sigma_male.var
sigma_age.sd ~ dunif(0, 100)
sigma_age.var <- pow(sigma_age.sd, 2)
sigma_age.prec <- 1 / sigma_age.var
beta_0 ~ dnorm(0.1,1/2.5^2)
alpha ~ dgamma(1,1)
}
"
dat$y <- dat$days
dat$c <- dat$days
dat[which(dat$event == 0), 'y'] <- NA
dat[which(dat$event == 1), 'c'] <- Inf
dat$is.censored <- 1- dat$event
data_jags <- compose_data(dat)
data_jags <- append(data_jags, list(n_hosp = 10))
ini <- list(list(y = ifelse(is.na(dat$y), dat$c+1, NA), alpha = 1, mu_male = 0, mu_age = 0,
sigma_male.sd = 0.1, sigma_age.sd = 0.1, beta_0 = 0),
list(y = ifelse(is.na(dat$y), dat$c+1, NA), alpha = 1, mu_male = 0.2, mu_age = 0.1,
sigma_male.sd = 0.1, sigma_age.sd = 0.1, beta_0 = -0.1))
par <- c("alpha", "mu_male", "mu_age","sigma_male.sd", "sigma_age.sd", "beta_0",
"beta_male", "beta_age")
hosp_jag <- jags.model(textConnection(surv_model),
data = data_jags,
inits = ini,
n.chains = 2,
quiet = TRUE)
update(hosp_jag, 10000)
sam <- coda.samples(hosp_jag,
n.iter = 10000,
variable.names = par)
hosp_draws <- as_draws(sam)
estimates <- summary(hosp_draws, ~quantile(.x,probs = c(0.5, 0.025,0.975)))
estimates[2:22,c('50%', '2.5%', '97.5%')] <- exp(estimates[2:22,c('50%', '2.5%', '97.5%')])
estimates
hospitals <- list(J = c(1:10), y1 = t(estimates[c(3:12), c(2)]),
y2 =  t(estimates[c(13:22), c(2)]),
lb1 = t(estimates[c(3:12), c(3)]),
up1 = t(estimates[c(3:12), c(4)]),
lb2 = t(estimates[c(13:22), c(3)]),
up2 = t(estimates[c(13:22), c(4)]))
plot(1:10,hospitals$y2, pch = 4, col = 'red', lwd = 3, ylim = c(0.5,2.5),
ylab = 'Posterior effect', xlab = 'Hospital',
main = 'Posterior gender hazard ratio', xaxp  = c(1, 10, 9))
arrows(1:10, hospitals$lb2, 1:10, hospitals$up2,
length=0.05, angle=90, code=3, col = 'green', lwd = 2)
abline(h = 0, lty = 2)
plot(1:10,hospitals$y1, pch = 4, col = 'red', lwd = 3, ylim = c(0.5,2.5),
ylab = 'Posterior effect', xlab = 'Hospital', main = 'Posterior age hazard ratio',
xaxp  = c(1, 10, 9))
arrows(1:10, hospitals$lb1, 1:10, hospitals$up1,
length=0.05, angle=90, code=3, col = 'green', lwd = 2)
abline(h = 0, lty = 2)
y_pred_sample <- coda.samples(hosp_jag,
n.iter = 10000,
variable.names = c("y_pred"))
y_pred_draws <- as_draws_df(y_pred_sample)[, -c(1001:1003)]
sample_km <- as.data.frame(t(sample_n(y_pred_draws, 10)))
sample_km <- cbind(sample_km, dat)[,c(1:12)]
plot(survfit(Surv(days, event) ~ 1, data = sample_km),
xlab = "Days",
ylab = "Survival probability", conf.int = TRUE)
for (i in 1:10){
lines(survfit(Surv(sample_km[,c(i)], event) ~ 1, data = sample_km), col = "red",conf.int = FALSE)
}
library(RandomisedTrialsEmulation, lib.loc='/home/li/lib/R/R_LIBS/')
library(RandomisedTrialsEmulation)
install_github("CAM-Roche/RandomisedTrialsEmulation")
remotes::install_github("CAM-Roche/RandomisedTrialsEmulation")
library(modelr)
library(reshape2)
library(tidyverse)
library(tidyr)
setwd("/Users/juliette/Documents/MPhil PHS 21-22/MPhil-dissertation/Code")
source("simulate_MSM.R")
set.seed(20222022)
library(RandomisedTrialsEmulation)
data_path = "MSM_censor.csv"
ITT <- RandomisedTrialsEmulation::initiators(data_path, id='ID', period='t', treatment='A', outcome='Y', eligible ='eligible', cense = 'C',
outcomeCov_var=c('X3', 'X4', 'age_s'), outcomeCov =c( 'X3', 'X4', 'age_s'), model_var = c('assigned_treatment'),
cov_censed = c( 'X1', 'X2','X3', 'X4', 'age_s'), model_censed =c( 'X1', 'X2','X3', 'X4', 'age_s'), pool_cense=1,
include_expansion_time_case = 0,  include_followup_time_case = c("linear", "quadratic"), include_regime_length = 1,
use_weight=1, use_censor=0, case_control = 0, data_dir =getwd(), numCores = 1, quiet = FALSE)
save(ITT,file = "ITT_fit.rda")
PP <- RandomisedTrialsEmulation::initiators(data_path, id='ID', period='t', treatment='A', outcome='Y', eligible ='eligible', cense = 'C',
model_switchd =c( 'X1', 'X2', 'X3', 'X4', 'age_s'),
cov_switchd = c( 'X1', 'X2', 'X3', 'X4', 'age_s'),
outcomeCov_var=c( 'X3', 'X4', 'age_s'), outcomeCov =c('X3', 'X4', 'age_s'), model_var = c('assigned_treatment'),
cov_censed = c( 'X1', 'X2','X3', 'X4', 'age_s'), model_censed =c( 'X1', 'X2','X3', 'X4', 'age_s'), pool_cense=1,
include_expansion_time_case = 0, include_followup_time_case = c("linear", "quadratic"), include_regime_length = 1,
use_weight=1, use_censor=1, case_control = 0, data_dir =getwd(), numCores = 1, quiet = FALSE)
save(PP,file = "PP_fit.rda")
#RUN BOOTSTRAP FILES TO WORK ON SAME SIMULATED DATA AND MODEL FIT
load("ITT_fit.rda")
